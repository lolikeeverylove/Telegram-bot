from random import choice

import telebot
from telebot import types
from telebot.types import Message

# import mysql.connector
# from crontab import CronTab

# conn = mysql.connector.connect(user="root", password="pass", host="127.0.0.1", database="vagina")
# cursor = conn.cursor(buffered=True)

#–°–ö–†–´–í–ê–ï–ú –ö–õ–ê–í–£!!!
# markup = types.ReplyKeyboardRemove(selective=False) #—Å–∫—Ä—ã–≤–∞–µ—Ç –º–∞—Ä–∫—É–ø—ã))
# bot.send_message(message.from_user.id, "—Å–∫—Ä—ã–ª–∏ –º–∞—Ä–∫—É–ø—ã", reply_markup=markup)
#–í–ö–õ–Æ–ß–ê–ï–ú –ö–õ–ê–í–£ –°–ù–û–í–ê!!!
# markup = types.ReplyKeyboardMarkup(selective=True)
# itembtn1 = types.KeyboardButton('–ø–æ–º–æ—â—å')
# itembtn2 = types.KeyboardButton('lel')
# itembtn3 = types.KeyboardButton('d')
# markup.add(itembtn1, itembtn2, itembtn3)
# bot.send_message(message.from_user.id, "vklychil klvau:", reply_markup=markup)


# message.from_user.id —ç—Ç–æ —Ç–æ—Ç –æ—Ç –∫–æ–≥–æ –ø—Ä–∏—à–ª–æ –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
# –Ω–∞–∂–º–∏ —Å –∑–∞–∂–∞—Ç–æ–π q –ø–æ —Ç–∞–π–ø—Å –∏ –Ω–∞–π–¥–∏ —é–∑–µ—Ä –∏ —Ç–∞–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ –±–¥))
bot = telebot.TeleBot('962102849:AAHmDtPsD8xJrf_6lC0HmfUTpzmz4i9hLuY')
name = ''
family = ''
city=''
age = 0
photoNumber = 1
smile = ['üòâ', 'üíã', 'üôä', 'üòâ', 'üòè', 'üòã', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'üòÇ']

@bot.message_handler(content_types=['text', 'document', 'audio'])
# –ê–Ω–æ—Ç–∞—Ü–∏—è –≥–æ–≤–æ—Ä–∏—Ç. —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –∫–ª–∞—Å—Å Message,
# –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
# –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –¥–µ–ª–∞—Ç—å —Å–æ —Å—Ç—Ä–∏–Ω–≥–∞–º–∏ –∏ —Ç.–ø.
# –≤ —Ü–µ–ª–æ–º –º–æ–∂–Ω–æ –∏ —Å—Ç—Ä–æ—á–∫–∏ —Ç—É–¥–∞ –∑–∞–∫–∏–Ω—É—Ç—å –ø–æ–∫–∞ –º–µ—Å—ç–¥–∂ –Ω–µ –∫–∏–Ω—É–ª)
def get_text_messages(message: Message):
    if message.text == "Hello" or message.text == "hello" or message.text == "–ü—Ä–∏–≤–µ—Ç" or message.text == "–ø—Ä–∏–≤–µ—Ç":
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç, —á–µ–º —è –º–æ–≥—É —Ç–µ–±–µ –ø–æ–º–æ—á—å? " + choice(smile))
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "/reg - registration\n"
                                               "/rules -important information \n"
                                               "/sendMem - send mem for you\n"                                        
                                               "or write hello " + smile[1] +
                         "\n/dealFinder - buy sneakers")
    elif message.text == "/reg":
        bot.send_message(message.from_user.id, "–ö–∞–∫–æ–µ –≤–∞—à–µ –∏–º—è?")
        #–ø–æ—Å–ª–µ —ç—Ç–æ–π —Ö—É–π–Ω–∏ –Ω–∞–¥–æ –≤–Ω–∞—á–∞–ª–µ –≤–≤–µ—Å—Ç–∏ –º–µ—Å—Å–µ–¥–∂ —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Ç–æ–¥!!!
        bot.register_next_step_handler(message, name)  # step - —à–∞–≥
    elif message.text == "/sendMem":
        global photoNumber
        try:
            photo = open('–º–µ–º—ã/1 (' + str(photoNumber) + ').png', 'rb')
        except FileNotFoundError:
            print("–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (–Ω–µ png)")
        photoNumber += 1
        bot.send_photo(message.from_user.id, photo)
    elif message.text == "/rules":
        bot.forward_message(message.from_user.id, 431073306, 413)
    elif message.text == "/dealFinder":
        # –¥–µ–ª–∞–µ–º –º–∞—Ä–∫—É–ø(–≤ –∫–∞–∂–¥–æ–º –æ—Ç–¥–µ–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ª–æ–∫–∞–ª –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è)
        # markup = types.ReplyKeyboardMarkup(row_width=2)
        # itembtn1 = types.KeyboardButton('Nike')
        # itembtn2 = types.KeyboardButton('Adidas')
        # itembtn3 = types.KeyboardButton('Puma')
        # markup.add(itembtn1, itembtn2, itembtn3)
        # –≤–º–µ—Å—Ç–µ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —é–∑–µ—Ä—É
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É –∫—Ä–æ—Å—Å–æ–≤–æ–∫ –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ", reply_markup=createMarkup('Nike','Adidas','Puma', 2))
        bot.register_next_step_handler(message, sellSneakers)
    elif message.text == "hui":
        bot.reply_to(message, message.text.upper())
    else:
        bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


def name(message):
    global name  # –≤–∏–¥–∏–º–æ —á—Ç–æ–±—ã –ø—Ä–∏—Å–≤–æ–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É –∏–º–µ–Ω–∏ –≤–ø–∏—Å–∞–Ω–Ω–æ–µ –∏–º—è –≤ —á–∞—Ç–∏–∫–µ)
    name = message.text

    markup = types.ReplyKeyboardMarkup(row_width=2) #–¥–µ–ª–∞–µ–º –º–∞—Ä–∫—É–ø(–≤ –∫–∞–∂–¥–æ–º –æ—Ç–¥–µ–ª—å–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ª–æ–∫–∞–ª –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è)
    itembtn1 = types.KeyboardButton('–ø–æ–º–æ—â—å')
    itembtn2 = types.KeyboardButton('lel')
    itembtn3 = types.KeyboardButton('d')
    markup.add(itembtn1, itembtn2, itembtn3)
    #–≤–º–µ—Å—Ç–µ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–±—ã—á–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —é–∑–µ—Ä—É
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é", reply_markup=markup)
    bot.register_next_step_handler(message, family)


def family(message):
    global family
    family = message.text

    bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥')
    bot.register_next_step_handler(message, get_city)


def get_city(message):
    global city
    city = message.text
    bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç")
    bot.register_next_step_handler(message, get_age)

def get_age(message):
    global age
    while age == 0:  # –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è
        try:
            age = int(message.text)  # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –≤–≤–µ–¥–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        except Exception:
            bot.send_message(message.from_user.id, '–¶–∏—Ñ—Ä–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')
            age=0
    bot.send_message(message.from_user.id, '–¢–µ–±–µ ' + str(age) + ' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç ' + name + ' ' + family + ' —Ç—ã –∏–∑ ' +city+'?')
    keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes');  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
    keyboard.add(key_yes)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no');
    keyboard.add(key_no)
    question = '–¢–µ–±–µ ' + str(age) + ' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç ' + name + ' ' + family + '?';
    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


def sellSneakers(message):
    if message.text == "Adidas":
        # —Å–∫—Ä—ã–≤–∞–µ—Ç –∫–ª–∞–≤—É –∏ —Ç–∏–ø–∞ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
        # –º–æ–∂–Ω–æ –∫ –ø—Ä–∏–º–µ—Ä—É –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∏ —Å–∫—Ä—ã—Ç—å –∫–ª–∞–≤—É –Ω–µ–Ω—É–∂–Ω—É—é –∫ –ø—Ä–∏–º–µ—Ä—É
        markup = types.ForceReply(selective=False)
        bot.send_message(message.from_user.id, "–ö–∞–∫—É—é –º–æ–¥–µ–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ?:", reply_markup=markup)
    elif message.text=="Nike":
        markup = types.ForceReply(selective=False)
        bot.send_message(message.from_user.id, "–ö–∞–∫—É—é –º–æ–¥–µ–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ?:", reply_markup=markup)
    elif message.text=="Puma":
        markup = types.ForceReply(selective=False)
        bot.send_message(message.from_user.id, "–ö–∞–∫—É—é –º–æ–¥–µ–ª—å –≤—ã —Ö–æ—Ç–∏—Ç–µ?:", reply_markup=markup)
    else:
        bot.send_message(message.from_user.id, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ!!")
        bot.register_next_step_handler(message, sellSneakers)

def createMarkup(item1,
                item2,
                 item3,
                 width:int):
    markup = types.ReplyKeyboardMarkup(row_width=width)
    itembtn1 = types.KeyboardButton(item1)
    itembtn2 = types.KeyboardButton(item2)
    itembtn3 = types.KeyboardButton(item3)
    markup.add(itembtn1, itembtn2, itembtn3)
    return markup

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "yes":  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        ...  # –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∏–ª–∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏
        # reg_new_user = (
        #     "INSERT INTO vagina(first_name, surname, age) values (%(first_name)s, %(second_name)s, %(age)s)")
        # data_person = {
        #     'first_name': name,
        #     'second_name': family,
        #     'age': age,
        # }
        # cursor.execute(reg_new_user, data_person)
        # conn.commit()
        # —Ç—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É
        bot.send_message(call.message.chat.id, '–ó–∞–ø–æ–º–Ω—é : )');
    elif call.data == "no":
        ...  # –ø–µ—Ä–µ—Å–ø—Ä–∞—à–∏–≤–∞–µ–º

# —ç—Ç–∞ —Ö—É–∏—Ç–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç –ø—Ä–æ—Å—Ç–æ –æ–ø—Ä–æ—Å –µ—Å—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 0 —Å–µ–∫—É–Ω–¥
bot.polling(none_stop=True, interval=0)
